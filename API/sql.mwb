-- Crear la base de datos si no existe
CREATE DATABASE IF NOT EXISTS db_inmobiliaria;
USE db_inmobiliaria;

-- Tabla de roles
CREATE TABLE roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- Tabla de permisos
CREATE TABLE permisos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- Relación roles-permisos (muchos a muchos)
CREATE TABLE roles_permisos (
  rol_id INT,
  permiso_id INT,
  PRIMARY KEY (rol_id, permiso_id),
  FOREIGN KEY (rol_id) REFERENCES roles(id),
  FOREIGN KEY (permiso_id) REFERENCES permisos(id)
) ENGINE=InnoDB;

-- Tabla de usuarios
CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(100) NOT NULL UNIQUE,
  nombre VARCHAR(50),
  apellido VARCHAR(50),
  password VARCHAR(255) NOT NULL,
  rol_id INT,
  FOREIGN KEY (rol_id) REFERENCES roles(id)
) ENGINE=InnoDB;

-- Tipos de propiedad
CREATE TABLE tipos_propiedad (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(50) NOT NULL
) ENGINE=InnoDB;

-- Propiedades
CREATE TABLE propiedades (
  id INT AUTO_INCREMENT PRIMARY KEY,
  titulo VARCHAR(100) NOT NULL,
  descripcion TEXT,
  precio DECIMAL(10,2),
  tipo_id INT,
  usuario_id INT,
  FOREIGN KEY (tipo_id) REFERENCES tipos_propiedad(id),
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
) ENGINE=InnoDB;

-- Imágenes de propiedad
CREATE TABLE imagenes_propiedad (
  id INT AUTO_INCREMENT PRIMARY KEY,
  propiedad_id INT,
  url VARCHAR(255) NOT NULL,
  FOREIGN KEY (propiedad_id) REFERENCES propiedades(id)
) ENGINE=InnoDB;
